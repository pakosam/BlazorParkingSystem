@page "/delete-parking/{Id:int}"
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3>Delete parking</h3>

@if (isSubmitting)
{
    <p>Submitting...</p>
}
else if (successMessage != null)
{
    <p class="text-success">@successMessage</p>
}
else if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}

<form @onsubmit="SubmitForm">
    <div>
        <label for="id">ID</label>
        <input id="id" @bind="deletedParking.Id" readonly />
    </div>

    <button type="submit">Delete</button>
</form>

@code {
    [Parameter]
    public int Id { get; set; }

    private DeleteParking deletedParking = new DeleteParking();
    private bool isSubmitting = false;
    private string? successMessage;
    private string? errorMessage;

    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = uri.Query.TrimStart('?');
        var queryParameters = query.Split('&', StringSplitOptions.RemoveEmptyEntries);

        foreach (var parameter in queryParameters)
        {
            var keyValue = parameter.Split('=', 2);
            if (keyValue.Length == 2 && keyValue[0] == "parkingId")
            {
                if (int.TryParse(keyValue[1], out var parsedId))
                {
                    Id = parsedId;
                }
                break;
            }
        }
        deletedParking.Id = Id;
    }


    private async Task SubmitForm()
    {
        isSubmitting = true;
        successMessage = null;
        errorMessage = null;

        try
        {
            var response = await Http.DeleteAsync($"https://localhost:7185/api/Parkings?id={Id}");

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Parking deleted successfully!";
            }
            else
            {
                errorMessage = "Failed to delete parking. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }

    public class DeleteParking
    {
        public int Id { get; set; }
    }
}
