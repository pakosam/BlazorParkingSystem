@page "/employees"
@using ParkingSystem.Services;
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ApiService ApiService;
@inject IHttpClientFactory HttpClientFactory

<PageTitle>Employees</PageTitle>

<div class="add-employee-part">
    <h1>Employees</h1>
</div>

@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="add-button">
        <button class="add-btn" @onclick="NavigateToAddEmployee">Add new employee</button>
    </div>

    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Full name</th>
                    <th>Birth date</th>
                    <th>Parking ID</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var employee in employees)
                {
                    <tr>
                        <td>@employee.Id</td>
                        <td>@employee.FullName</td>
                        <td>@employee.BirthDate</td>
                        <td>@employee.parkingId</td>
                        <td>
                            <a href="/update-employee/@employee.Id"><button class="update-btn">Update</button></a>
                        </td>
                        <td>
                            <a href="/delete-employee/@employee.Id"><button class="delete-btn">Delete</button></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    [Parameter]
    public int parkingId { get; set; }

    private Employee[]? employees;

    private HttpClient AuthorizedHttpClient => HttpClientFactory.CreateClient("AuthorizedClient");

    protected override async Task OnInitializedAsync()
    {
        var response = await ApiService.MakeRequestAsync("https://localhost:7185/api/Employees", HttpMethod.Get);
        if (response.IsSuccessStatusCode)
        {
            employees = await response.Content.ReadFromJsonAsync<Employee[]>();
        }
        // employees = await Http.GetFromJsonAsync<Employee[]>("https:localhost:7185/api/Employees");
    }

    private void NavigateToAddEmployee()
    {
        NavigationManager.NavigateTo($"/add-employee");
    }

    public class Employee
    {
        public int Id { get; set; }
        public string FullName { get; set; }
        public DateOnly BirthDate { get; set; }
        public int parkingId { get; set; }
    }
}
